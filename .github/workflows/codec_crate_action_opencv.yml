name: Build and test adder-codec-rs

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    
jobs:
  src:
    strategy:
      fail-fast: false
      matrix:
        os:
          - image: ubuntu-20.04
            family: linux
        rust:
          - stable
          - beta
        version:
          - opencv: 4.6.0
        exclude:
          - os:
              family: osx
            version:
              opencv: 3.4.17
    runs-on: ${{ matrix.os.image }}
    env:
      OS_FAMILY: ${{ matrix.os.family }}
      RUST_TOOLCHAIN: ${{ matrix.rust }}
      Atlas_ROOT_DIR: /usr/include/ # for cmake to find lapacke.h
      OPENCV_VERSION: ${{ matrix.version.opencv }}
    steps:
      - uses: actions/checkout@v2

      - name: Cache dependencies
        uses: actions/cache@v1
        with:
          path: ~/build
          key: ${{ runner.os }}-${{ matrix.version.opencv }}-build

      - name: Install dependencies
        run: adder-codec-rs/ci/install.sh
        shell: bash

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          default: true
          
      - name: Test project
        run: adder-codec-rs/ci/script.sh
        shell: bash

#   vcpkg:
#     strategy:
#       fail-fast: false
#       matrix:
#         os:
#           - image: ubuntu-20.04
#             family: linux
#         rust:
#           - stable
#           - beta
#         version:
#           - vcpkg: 4
#     runs-on: ${{ matrix.os.image }}
#     env:
#       OS_FAMILY: ${{ matrix.os.family }}
#       RUST_TOOLCHAIN: ${{ matrix.rust }}
#       VCPKG_OPENCV_VERSION: ${{ matrix.version.vcpkg }}
#       VCPKG_TREE_COMMIT: 2022.02.23
#     steps:
#       - uses: actions/checkout@v2

#       - name: Cache dependencies
#         uses: actions/cache@v1
#         with:
#           path: ~/build
#           key: ${{ runner.os }}-${{ matrix.version.vcpkg }}-build

#       - name: Install dependencies
#         run: adder-codec-rs/ci/install.sh
#         shell: bash

#       - name: Install Rust
#         uses: actions-rs/toolchain@v1
#         with:
#           toolchain: ${{ matrix.rust }}
#           default: true
          
#       - name: Test project
#         run: adder-codec-rs/ci/script.sh
#         shell: bash

  bin:
    strategy:
      fail-fast: false
      matrix:
        os:
          - image: ubuntu-20.04
            family: linux
        rust:
          - stable
          - beta
        version:
          - branch: 4
            opencv: 4.5.5
            brew: "@4"
        include:
          - os:
              image: ubuntu-20.04
              family: linux
            rust: stable
            version:
              opencv: 4.2.0
              brew: excluded
    runs-on: ${{ matrix.os.image }}
    env:
      OS_FAMILY: ${{ matrix.os.family }}
      RUST_TOOLCHAIN: ${{ matrix.rust }}
      OPENCV_VERSION: ${{ matrix.version.opencv }}
      BREW_OPENCV_VERSION: ${{ matrix.version.brew }}
    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies
        run: adder-codec-rs/ci/install.sh
        shell: bash

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          default: true
      - name: Test project
        run: adder-codec-rs/ci/script.sh
        shell: bash
          
  docs-rs:
      runs-on: ubuntu-20.04
      steps:
        - uses: actions/checkout@v2

        - name: Install Rust
          uses: actions-rs/toolchain@v1
          with:
            toolchain: stable
            default: true

        - name: Run a documentation generation test
          run: adder-codec-rs/ci/docs-rs.sh
          shell: bash
